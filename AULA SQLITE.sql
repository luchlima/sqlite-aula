CREATE TABLE DEPARTAMENTOS(
    ID INTEGER,
    NOME TEXT,
    CONSTRAINT PK_DEPARTAMENTOS PRIMARY KEY (ID)
);

CREATE TABLE BANCOS(
    ID INTEGER NOT NULL,
    NOME TEXT,
    AGENCIA INTEGER DEFAULT 1,
    CONTA INTEGER NOT NULL,
    CONSTRAINT PK_BANCOS PRIMARY KEY (ID)
);

CREATE TABLE FUNCIONARIOS(
    ID INTEGER,
    NOME TEXT,
    ID_DPTO INTEGER,
    SALARIO REAL,
    DT_ADMISSAO DATE,
    DT_NASCIMENTO DATE,
    ID_BCO INTEGER,
    CONSTRAINT PK_FUNCIONARIOS PRIMARY KEY(ID)
    CONSTRAINT FK_FUNCIONARIOS_X_DEPARTAMENTOS FOREIGN KEY (ID_DPTO) REFERENCES DEPARTAMENTOS (ID),
    CONSTRAINT FK_FUNCIONARIOS_X_BANCOS FOREIGN KEY (ID_BCO) REFERENCES BANCOS (ID)
);

CREATE TABLE DEPENDENTES(
    ID INTEGER NOT NULL,
    NOME TEXT,
    IDADE INTEGER,
    ID_FUNC INTEGER,
    CONSTRAINT PK_DEPENDENTES PRIMARY KEY (ID),
    CONSTRAINT FK_DEPENDENTES_X_FUNCIONARIOS FOREIGN KEY (ID_FUNC) REFERENCES FUNCIONARIOS (ID)
);

INSERT INTO
	DEPARTAMENTOS (NOME)
VALUES
	('Recursos Humanos');

INSERT INTO
	DEPARTAMENTOS (NOME)
VALUES
	('Desenvolvimento');

INSERT INTO
	DEPARTAMENTOS (NOME)
VALUES
	('Financeiro');

INSERT INTO
	DEPARTAMENTOS (NOME)
VALUES
	('Editoração');
 
-------------------------------------------------------

INSERT INTO
	BANCOS(NOME, AGENCIA, CONTA)
VALUES
	('Banco do Brasil', 04073, 66206);

INSERT INTO
	BANCOS(NOME, AGENCIA, CONTA)
VALUES
	('Bradesco', 5004,  124688);

INSERT INTO
	BANCOS(NOME, AGENCIA, CONTA)
VALUES
	('Bradesco', 3451,  12322);
INSERT INTO
	BANCOS (NOME, AGENCIA, CONTA)
VALUES
	('Caixa Econômica Federal', 104, 02580);

INSERT INTO
	BANCOS(NOME, AGENCIA, CONTA)
VALUES
	('Itaú', 232324, 34534);
 
-------------------------------------------------------

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO, ID_BCO)
VALUES
	('João Anastácio', 1, 500.00, '2005-01-01', '1987-07-20', 1);

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO, ID_BCO)
VALUES
	('Pedro Brasona', 2, 800.00, '2001-02-05', '1980-12-01', 2);

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO, ID_BCO)
VALUES
	('Manoel da R. Pizzolo', 3, 1500.00, '2015-05-02', '1997-05-02', 3);

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO, ID_BCO)
VALUES
	('João Malha', 4, 189.00, '2009-04-10', '1991-04-10', 4);

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO)
VALUES
	('Antônio Nascimento', 3, 200.00, '1992-01-10', '1974-01-10');

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO)
VALUES
	('Maria de Jesus', 2, 1800.00, '1998-02-11', '1980-03-31');

INSERT INTO
	FUNCIONARIOS(NOME, ID_DPTO, ID_BCO, SALARIO, DT_ADMISSAO, DT_NASCIMENTO)
VALUES
	('Raimundo Pizzolo', 4, 2, 180.00, '1985-02-11', '1967-02-27');

INSERT INTO
	FUNCIONARIOS(NOME, SALARIO, ID_BCO, DT_ADMISSAO, DT_NASCIMENTO)
VALUES
	('Ana Silva', 300.00, 1, '2020-12-19', '2004-06-11');

--ORDENAR TABELA--------------------
SELECT * FROM BANCOS ORDER BY NOME;------------
SELECT * FROM BANCOS ORDER BY NOME ASC, AGENCIA DESC; --
------------------------------------

SELECT * FROM FUNCIONARIOS WHERE ID_BCO IS NOT NULL AND ID_DPTO IS NULL;

SELECT * FROM FUNCIONARIOS WHERE SALARIO <= 200 AND DT_NASCIMENTO >= '1974-01-10';

SELECT * FROM FUNCIONARIOS WHERE SALARIO <= 200 AND STRFTIME('%Y', DT_NASCIMENTO) > 1974;

SELECT * FROM FUNCIONARIOS WHERE STRFTIME('%m', DT_ADMISSAO) = '02'; 

SELECT * FROM BANCOS WHERE AGENCIA LIKE '%4' AND CONTA LIKE '1%';

SELECT NOME, STRFTIME('%d' || '/' ||'%m' || '/' || '%Y', DT_ADMISSAO) DT_ADMISSAO, DT_NASCIMENTO, DATE('now') - DT_NASCIMENTO, DATE('now') - DT_ADMISSAO FROM FUNCIONARIOS;

SELECT BANCOS.NOME FROM BANCOS LEFT JOIN FUNCIONARIOS ON FUNCIONARIOS.ID_BCO = BANCOS.ID WHERE FUNCIONARIOS.ID_BCO IS NULL;  
--------------------------------------
SELECT 
  FUNC.NOME NOME_FUNCIONARIO 
, IFNULL(DPTO.NOME, 'Sem Departamento') NOME_DEPARTAMENTO --SE DEPARTAMENTO FOR NULO, VAI TER O VALOR 'SEM DEPARTAMENTO'
, IFNULL(BCO.NOME, 'Sem banco') NOME_BANCO --SE BANCO FOR NULO, VAI TER O VALOR 'SEM BANCO'
FROM FUNCIONARIOS FUNC
LEFT JOIN DEPARTAMENTOS DPTO ON (DPTO.ID = FUNC.ID_DPTO) --CONECTA ID DO DEPARTAMENTO COM ID DO FUNCIONARIO
LEFT JOIN BANCOS BCO ON (BCO.ID = FUNC.ID_BCO);-- CONECTA ID DO BANCO COM ID DO FUNCIONARIO

--------------------------------------
--QUESTÃO 9
SELECT * FROM FUNCIONARIOS;
SELECT * FROM BANCOS;
SELECT * FROM DEPARTAMENTOS;

-- FINANCEIRO = 3
--DESENVOLVIMENTO = 2
--BRADESCO = 2,3

SELECT 
  FUNC.NOME NOME_FUNCIONARIO 
, DPTO.NOME NOME_DEPARTAMENTO 
, BCO.NOME  NOME_BANCO 
FROM FUNCIONARIOS FUNC
LEFT JOIN DEPARTAMENTOS DPTO ON (DPTO.ID = FUNC.ID_DPTO) --CONECTA ID DO DEPARTAMENTO COM ID DO FUNCIONARIO
LEFT JOIN BANCOS BCO ON (BCO.ID = FUNC.ID_BCO)           --CONECTA ID DO BANCO COM ID DO FUNCIONARIO
WHERE DPTO.ID = 3    --3 É O ID QUE ESTÁ O DEPARTAMENTO
AND BCO.ID IN (2, 3) --(2, 3) QUANDO TIVER 2 OPÇÕES 
    OR               -- QUANDO TIVER DUAS OU MAIS PERGUNTAS
DPTO.ID = 2          -- 2 É O ID QUE ESTÁ O DEPARTAMENTO
AND BCO.ID IS NULL;  -- IS NULL É QUANDO ESTIVER ALGO NULO
----------------------------------------------------------

SELECT * FROM FUNCIONARIOS;
SELECT * FROM BANCOS;
-- 6 E 8 NOVATOS
-- 2 BRADESCO 
--4 CAIXA

SELECT
        FUNC.NOME NOME_FUNCIONARIO,
    CASE WHEN strftime('%Y', DT_ADMISSAO) <= '2000' THEN
        'Senior'
    WHEN  strftime('%Y', DT_ADMISSAO) BETWEEN '2000' AND '2014' THEN 'Pleno'
    WHEN strftime('%Y', DT_ADMISSAO) > '2014' THEN 'Novato'
    END NOME_COLUNA,
    CASE WHEN ID_BCO = 2 THEN 
        SALARIO * 1.1
        WHEN  ID_BCO = 4 
    THEN SALARIO* 1.15
    ELSE SALARIO
    END SALARIO_PREVISTO
    FROM FUNCIONARIOS FUNC;
    --e aumento de 15% para os funcionários plenos que tiverem conta na caixa econômica Federal.' 

